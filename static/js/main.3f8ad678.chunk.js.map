{"version":3,"sources":["Components/Burger/BurgerIngredients/BurgerIngredients.module.css","Components/Navigation/SideDrawer/SideDrawer.module.css","Components/Burger/BuildControls/BuildControl/BuildControl.module.css","Components/Burger/OrderSummary/OrderSummary.module.css","Components/Navigation/Toolbar/Toolbar.module.css","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","Components/Burger/BuildControls/BuildControls.module.css","Components/UI/Modal/Modal.module.css","Components/UI/Button/Button.module.css","Components/Order/CheckoutSummary/CheckoutSummary.module.css","HOC/Layout/Layout.module.css","assets/images/burger-logo.png","Components/Logo/Logo.module.css","Components/Navigation/NavigationItems/NavigationItems.module.css","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/Burger/Burger.module.css","Components/UI/Spinner/Spinner.module.css","Containers/Checkout/ContactData/ContactData.module.css","HOC/Auxilary/Auxilary.js","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Components/Navigation/Toolbar/Toolbar.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/SideDrawer/SideDrawer.js","HOC/Layout/Layout.js","Components/Burger/BurgerIngredients/BurgerIngredients.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/UI/Modal/Modal.js","Components/UI/Spinner/Spinner.js","Components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","Containers/BurgerBuilder/BurgerBuilder.js","HOC/ErrorHandler/ErrorHandler.js","Components/UI/Button/Button.js","Components/Order/CheckoutSummary/CheckoutSummary.js","Containers/Checkout/Checkout.js","Containers/Checkout/ContactData/ContactData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","to","link","exact","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredients","ingredients","type","BreadBottom","BreadTop","Seeds1","Seeds2","Cheese","Bacon","Meat","Salad","burger","dynamicIngredients","Object","keys","map","igKey","Array","_","i","key","reduce","oldArr","newArr","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removeIngred","disabled","isDisabled","More","addIngred","controls","BuildControls","price","toFixed","cntrKey","ingredientsAdd","ingredientsRemove","disabledParam","isPurchasable","OrderButton","showModal","Modal","nextProps","nextState","isShow","transform","opacity","closeButton","spinner","Loader","orderSummary","igkey","textTransform","clickedContinue","Button","Success","clickedCancel","Danger","axiosInstance","axios","create","defaults","baseURL","INGREDEIENTS_PRICES","salad","bacon","cheese","meat","errorHandler","WrappedComponent","errorMsg","errorConfirmedHandler","reqInterceptors","interceptors","request","use","req","resInterceptors","response","error","eject","message","totalPrice","showSpinner","orderMessages","Failed","addIngredientsHandler","updatedCount","oldPrice","ingredPrices","updatedInregedients","checkPurchasable","removeIngredientsHandler","oldCount","finalPrice","showModalHandler","HideModalHandler","continueCheckout","history","push","axiosOrders","get","then","data","catch","ingreds","SumOfIngreds","OldSum","newEl","disabledInfo","Spinner","OrderSummary","button","btnType","CheckoutSummary","CheckoutSummaryDiv","clickedContinued","Checkout","canPurchase","CheckoutCancelledHandler","goBack","CheckoutContinuedHandler","location","checkoutSummary","textAlign","ContactData","customer","cName","cEmail","caStreet","zip","deliveryMethod","OrderNowHandler","event","preventDefault","orderData","post","updatedCustomerData","target","name","value","spinnerData","conactContent","ref","placeholder","onChange","handleChange","App","path","component","BurgerBuilder","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.3f8ad678.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__u9k9Z\",\"BreadTop\":\"BurgerIngredients_BreadTop__2lI4E\",\"Seeds1\":\"BurgerIngredients_Seeds1__1T1m6\",\"Seeds2\":\"BurgerIngredients_Seeds2__1kms5\",\"Meat\":\"BurgerIngredients_Meat__2ANxC\",\"Cheese\":\"BurgerIngredients_Cheese__1F9TC\",\"Salad\":\"BurgerIngredients_Salad__2dDeS\",\"Bacon\":\"BurgerIngredients_Bacon__1LyKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3I5y2\",\"Open\":\"SideDrawer_Open__2xBaD\",\"Close\":\"SideDrawer_Close__3L83H\",\"Logo\":\"SideDrawer_Logo__1Z7ii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1288k\",\"Label\":\"BuildControl_Label__2526H\",\"Less\":\"BuildControl_Less__2yrt6\",\"More\":\"BuildControl_More__2s6d0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"OrderSummary_Button__3p3-5\",\"Success\":\"OrderSummary_Success__1gM17\",\"Danger\":\"OrderSummary_Danger__3uf5S\",\"enable\":\"OrderSummary_enable__nZZw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2D8IW\",\"Logo\":\"Toolbar_Logo__3PH56\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2dQWa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__5d3Zn\",\"active\":\"NavigationItem_active__cBpCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__FI1Mi\",\"OrderButton\":\"BuildControls_OrderButton__2EqVZ\",\"enable\":\"BuildControls_enable__2knuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1tCwy\",\"closeButton\":\"Modal_closeButton__sf80b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Aue4v\",\"Success\":\"Button_Success__dlur2\",\"Danger\":\"Button_Danger__184sx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__a53c9\",\"CheckoutSummaryDiv\":\"CheckoutSummary_CheckoutSummaryDiv__SGcem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__P4vfC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1vh4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__360it\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1q_vo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2iq_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__9BxtR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3hXQ5\",\"load3\":\"Spinner_load3__3qOXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1cS-o\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React from \"react\";\n\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\nimport classes from \"./Logo.module.css\";\n\nconst logo = (props) => (\n  <div className={classes.Logo} style={{ height: props.height }}>\n    <img src={burgerLogo} alt=\"MyBurger\" />\n  </div>\n);\n\nexport default logo;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport classes from \"./NavigationItem.module.css\";\n\nconst navigationItem = (props) => (\n  <li className={classes.NavigationItem}>\n    <NavLink\n      activeClassName={classes.active}\n      to={props.link}\n      exact={props.exact}\n    >\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default navigationItem;\n","import React from \"react\";\n\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst navigationItems = () => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/\" exact>\n      Burger Builder\n    </NavigationItem>\n    <NavigationItem link=\"/checkout\">Checkout</NavigationItem>\n\n    {/* <NavigationItem link=\"/\" active>\n      \n    </NavigationItem>\n    <NavigationItem link=\"/\">Checkout</NavigationItem> */}\n  </ul>\n);\n\nexport default navigationItems;\n","import React from \"react\";\n\nimport classes from \"./DrawerToggle.module.css\";\n\nconst drawerToggle = (props) => (\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default drawerToggle;\n","import React from \"react\";\n\nimport classes from \"./Toolbar.module.css\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\nconst toolbar = (props) => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked} />\n    <div className={classes.Logo}>\n      <Logo />\n    </div>\n    <nav className={classes.DesktopOnly}>\n      <NavigationItems />\n    </nav>\n  </header>\n);\n\nexport default toolbar;\n","import React from \"react\";\n\nimport classes from \"./Backdrop.module.css\";\n\nconst backdrop = (props) =>\n  props.show ? (\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\n  ) : null;\n\nexport default backdrop;\n","import React from \"react\";\n\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SideDrawer.module.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport Aux from \"../../../HOC/Auxilary/Auxilary\";\n\nconst sideDrawer = (props) => {\n  let attachedClasses = [classes.SideDrawer, classes.Close];\n  if (props.open) {\n    attachedClasses = [classes.SideDrawer, classes.Open];\n  }\n  return (\n    <Aux>\n      <Backdrop show={props.open} clicked={props.closed} />\n      <div className={attachedClasses.join(\" \")}>\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems />\n        </nav>\n      </div>\n    </Aux>\n  );\n};\n\nexport default sideDrawer;\n","import React, { Component } from \"react\";\r\n\r\nimport Aux from \"../../HOC/Auxilary/Auxilary\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../Components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../Components/Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false,\r\n  };\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { showSideDrawer: !prevState.showSideDrawer };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n        <SideDrawer\r\n          open={this.state.showSideDrawer}\r\n          closed={this.sideDrawerClosedHandler}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./BurgerIngredients.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredients extends Component {\r\n  render() {\r\n    let ingredients = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredients = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n\r\n      case \"bread-top\":\r\n        ingredients = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"cheese\":\r\n        ingredients = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredients = <div className={classes.Bacon}></div>;\r\n        break;\r\n      case \"meat\":\r\n        ingredients = <div className={classes.Meat}></div>;\r\n        break;\r\n\r\n      case \"salad\":\r\n        ingredients = <div className={classes.Salad}></div>;\r\n        break;\r\n\r\n      default:\r\n        ingredients = null;\r\n        break;\r\n    }\r\n    return ingredients;\r\n  }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredients from \"./BurgerIngredients/BurgerIngredients\";\r\n\r\nconst burger = (props) => {\r\n  //console.log(props.ingredients);\r\n  const igProps = Object.keys(props.ingredients); // returns/create the keys of Array's keys\r\n  //console.log(igProps);\r\n  // loop based on main array's Keys\r\n  let dynamicIngredients = igProps\r\n    .map((igKey) => {\r\n      const newArr = [...Array(props.ingredients[igKey])];\r\n      //console.log(newArr);\r\n      // now below line will loop based on value of ingredients, i.e cheese is 2 then loop 2 times for cheese\r\n      return newArr.map((_, i) => {\r\n        return <BurgerIngredients key={igKey + i + 1} type={igKey} />;\r\n      });\r\n    })\r\n    /**** reduce is inbuilt javascript function for arrays. It automatically accepts 2 arguments. Previous value and current value. It also accept an initial value, for example an empty array [].  For more infor, please read guide about reduce.\r\n     *****/\r\n    .reduce((oldArr, newArr) => {\r\n      return oldArr.concat(newArr);\r\n    }, []);\r\n\r\n  if (dynamicIngredients.length === 0) {\r\n    dynamicIngredients = <p>Please start adding ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredients type=\"bread-top\" />\r\n      {dynamicIngredients}\r\n      <BurgerIngredients type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.module.css\";\r\n\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.Label}>{props.label} </div>\r\n      <button\r\n        className={classes.Less}\r\n        onClick={props.removeIngred}\r\n        disabled={props.isDisabled}\r\n      >\r\n        -\r\n      </button>\r\n      <button className={classes.More} onClick={props.addIngred}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport classes from \"./BuildControls.module.css\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n];\r\n\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Total Price: <b>${props.price.toFixed(2)}</b>\r\n      </p>\r\n      {controls.map((cntrKey) => {\r\n        return (\r\n          <BuildControl\r\n            label={cntrKey.label}\r\n            key={cntrKey.label}\r\n            addIngred={() => props.ingredientsAdd(cntrKey.type)}\r\n            removeIngred={() => props.ingredientsRemove(cntrKey.type)}\r\n            isDisabled={props.disabledParam[cntrKey.type]}\r\n          />\r\n        );\r\n      })}\r\n      <button\r\n        disabled={!props.isPurchasable}\r\n        className={classes.OrderButton}\r\n        onClick={props.showModal}\r\n      >\r\n        Order Now\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Aux from \"../../../HOC/Auxilary/Auxilary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nclass Modal extends Component {\r\n  // this will prevent the unnecessory re-rendering of ordersummary component because we only need to re-render the ordersummary component when modal is showned.\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return (\r\n      nextProps.isShow !== this.props.isShow ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  // below will only called when Modal is showned\r\n  // componentWillUpdate() {\r\n  //   //console.log(\"Modal will update\"); // this will\r\n  // }\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Backdrop show={this.props.isShow} clicked={this.props.clicked} />\r\n        <div\r\n          className={classes.Modal}\r\n          style={{\r\n            transform: this.props.isShow\r\n              ? \"translateY(0)\"\r\n              : \"translateY(-100vh)\",\r\n            opacity: this.props.isShow ? \"1\" : \"0\",\r\n          }}\r\n        >\r\n          <button className={classes.closeButton} onClick={this.props.clicked}>\r\n            X\r\n          </button>\r\n          {this.props.children}\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\n\r\nconst spinner = () => {\r\n  return <div className={classes.Loader}>Loading...</div>;\r\n};\r\nexport default spinner;\r\n","import React from \"react\";\r\nimport Aux from \"../../../HOC/Auxilary/Auxilary\";\r\nimport classes from \"./OrderSummary.module.css\";\r\n\r\nconst orderSummary = (props) => {\r\n  const ingredients = Object.keys(props.ingredients).map((igkey) => {\r\n    return (\r\n      <li key={igkey}>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igkey}</span>: &nbsp;\r\n        {props.ingredients[igkey]}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Aux>\r\n      <h3>Your Order Summary </h3>\r\n      <p>A Burger with the following ingredients:</p>\r\n      <ul>{ingredients}</ul>\r\n      <p>\r\n        <strong>Your Order Total: ${props.price.toFixed(2)}</strong>\r\n      </p>\r\n      <p>Continue to checkout?</p>\r\n      <button\r\n        onClick={props.clickedContinue}\r\n        className={[classes.Button, classes.Success].join(\" \")}\r\n      >\r\n        Continue\r\n      </button>\r\n      <button\r\n        onClick={props.clickedCancel}\r\n        className={[classes.Button, classes.Danger].join(\" \")}\r\n      >\r\n        Cancel\r\n      </button>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default orderSummary;\r\n","// here you can create axios instance and use it wherever it require to call your API.\r\n\r\nimport axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create();\r\n\r\n//below is your firebase/any backend API URL\r\naxiosInstance.defaults.baseURL =\r\n  \"https://react-burger-app-8053d.firebaseio.com/\";\r\n\r\nexport default axiosInstance;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../HOC/Auxilary/Auxilary\";\r\nimport Burger from \"../../Components/Burger/Burger\";\r\nimport BuildControls from \"../../Components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport Spinner from \"../../Components/UI/Spinner/Spinner\";\r\nimport OrderSummary from \"../../Components/Burger/OrderSummary/OrderSummary\";\r\nimport axiosOrders from \"../../axios-orders\";\r\nimport errorHandler from \"../../HOC/ErrorHandler/ErrorHandler\";\r\n\r\nconst INGREDEIENTS_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.4,\r\n  cheese: 0.7,\r\n  meat: 1.2,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: null,\r\n    totalPrice: 0,\r\n    isPurchasable: false,\r\n    showModal: false,\r\n    showSpinner: false,\r\n    orderMessages: {\r\n      Success: \"\",\r\n      Failed: \"\",\r\n    },\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    axiosOrders\r\n      .get(\"/ingredients.json\")\r\n      .then((response) => {\r\n        //console.log(response);\r\n        this.setState({\r\n          ingredients: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error: error,\r\n        });\r\n      });\r\n  }\r\n\r\n  checkPurchasable(ingreds) {\r\n    const SumOfIngreds = Object.keys(ingreds)\r\n      .map((igKey) => {\r\n        return ingreds[igKey];\r\n      })\r\n      .reduce((OldSum, newEl) => {\r\n        return OldSum + newEl;\r\n      }, 0);\r\n\r\n    this.setState({\r\n      isPurchasable: SumOfIngreds > 0, // this will return true or false\r\n    });\r\n  }\r\n  addIngredientsHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const oldPrice = this.state.totalPrice;\r\n    const ingredPrices = INGREDEIENTS_PRICES[type];\r\n    const updatedInregedients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedInregedients[type] = updatedCount;\r\n    this.setState({\r\n      totalPrice: oldPrice + ingredPrices,\r\n      ingredients: updatedInregedients,\r\n    });\r\n    this.checkPurchasable(updatedInregedients);\r\n  };\r\n\r\n  removeIngredientsHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) return; // return if less than 0 count\r\n    const updatedCount = oldCount - 1;\r\n    const oldPrice = this.state.totalPrice;\r\n\r\n    const ingredPrices = INGREDEIENTS_PRICES[type];\r\n    const updatedInregedients = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    let finalPrice = oldPrice - ingredPrices;\r\n    if (finalPrice <= 0) finalPrice = 0;\r\n    updatedInregedients[type] = updatedCount;\r\n    this.setState({\r\n      totalPrice: finalPrice,\r\n      ingredients: updatedInregedients,\r\n    });\r\n    this.checkPurchasable(updatedInregedients);\r\n  };\r\n\r\n  showModalHandler = () => {\r\n    this.setState({\r\n      showModal: true,\r\n    });\r\n  };\r\n\r\n  HideModalHandler = () => {\r\n    this.setState({\r\n      showModal: false,\r\n      orderMessages: { Success: \"\" },\r\n    });\r\n  };\r\n\r\n  continueCheckout = () => {\r\n    //alert(\"Checkout continue!\");\r\n    /* this.setState({ showSpinner: true });\r\n    const orderData = {\r\n      ingredients: this.state.ingredients,\r\n      price: this.state.totalPrice.toFixed(2),\r\n      customer: {\r\n        name: \"Parth Parmar\",\r\n        email: \"test@test.com\",\r\n        address: {\r\n          street: \"demo street\",\r\n          city: \"Ahmedabad\",\r\n          state: \"Gujarat\",\r\n          zipCode: \"380013\",\r\n          country: \"India\",\r\n        },       \r\n      },\r\n       deliveryMethod: \"LocalShipping\",\r\n    };\r\n\r\n    axiosOrders\r\n      .post(\"/orders.json\", orderData) // in firebase, we need to pass .json extension. we don't need to pass table name, whatever you will pass before .json, it will create table with that name. So here i passed orders.json because i want to save in orders table.\r\n      .then((response) => {\r\n        if (response) {\r\n          this.setState({\r\n            showSpinner: false,\r\n            orderMessages: {\r\n              Success: \"Order Placed Successfully, Thank you!\",\r\n            },\r\n          });\r\n        } else {\r\n          this.setState({\r\n            showSpinner: false,\r\n            showModal: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          showSpinner: false,\r\n          showModal: false,\r\n        });\r\n      }); */\r\n    //console.log(this.props);\r\n\r\n    // pass data to checkout page in URL, like GET method for example\r\n    /* const queryParams = [];\r\n    for (let i in this.state.ingredients) {\r\n      queryParams.push(\r\n        encodeURIComponent(i) +\r\n          \"=\" +\r\n          encodeURIComponent(this.state.ingredients[i])\r\n      );\r\n    }\r\n    const queryString = queryParams.join(\"&\");\r\n    this.props.history.push({\r\n      pathname: \"/checkout\",\r\n      search: \"?\" + queryString,\r\n    }); */\r\n\r\n    // pass data to checkout page hiddenly, like POST method for example\r\n    this.props.history.push(\"/checkout\", {\r\n      ingredients: this.state.ingredients,\r\n      price: this.state.totalPrice.toFixed(2),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0; // this will return boolean, true/false\r\n    }\r\n\r\n    //else if (this.state.orderMessages.Failed !== \"\") {\r\n    //   orderSummary = this.state.orderMessages.Failed;\r\n    // }\r\n\r\n    let burger = <Spinner />;\r\n    let orderSummary = null;\r\n    if (this.state.ingredients) {\r\n      burger = (\r\n        <Aux>\r\n          <Burger ingredients={this.state.ingredients} />\r\n          <BuildControls\r\n            ingredientsAdd={this.addIngredientsHandler}\r\n            ingredientsRemove={this.removeIngredientsHandler}\r\n            price={this.state.totalPrice}\r\n            disabledParam={disabledInfo}\r\n            isPurchasable={this.state.isPurchasable}\r\n            showModal={this.showModalHandler}\r\n          />\r\n        </Aux>\r\n      );\r\n\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.state.ingredients}\r\n          clickedCancel={this.HideModalHandler}\r\n          clickedContinue={this.continueCheckout}\r\n          price={this.state.totalPrice}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.showSpinner) {\r\n      orderSummary = <Spinner />;\r\n    } else if (this.state.orderMessages.Success !== \"\") {\r\n      orderSummary = this.state.orderMessages.Success;\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal isShow={this.state.showModal} clicked={this.HideModalHandler}>\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default errorHandler(BurgerBuilder, axiosOrders);\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport Aux from \"../Auxilary/Auxilary\";\r\n\r\nconst errorHandler = (WrappedComponent, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      errorMsg: null,\r\n    };\r\n    //componentWillMount() {\r\n    componentDidMount() {\r\n      this.reqInterceptors = axios.interceptors.request.use((req) => {\r\n        this.setState({\r\n          errorMsg: null,\r\n        });\r\n        return req;\r\n      });\r\n      this.resInterceptors = axios.interceptors.response.use(null, (error) => {\r\n        this.setState({\r\n          errorMsg: error,\r\n        });\r\n      });\r\n    }\r\n    componentWillUnmount() {\r\n      //console.log(\"Will Unmount\", this.reqInterceptors, this.resInterceptors);\r\n      axios.interceptors.request.eject(this.reqInterceptors);\r\n      axios.interceptors.response.eject(this.resInterceptors);\r\n    }\r\n    errorConfirmedHandler = () => {\r\n      this.setState({\r\n        errorMsg: null,\r\n      });\r\n    };\r\n    render() {\r\n      return (\r\n        <Aux>\r\n          <Modal\r\n            isShow={this.state.errorMsg}\r\n            clicked={this.errorConfirmedHandler}\r\n          >\r\n            {this.state.errorMsg ? this.state.errorMsg.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Aux>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default errorHandler;\r\n","import React from \"react\";\n\nimport classes from \"./Button.module.css\";\n\nconst button = (props) => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\n    onClick={props.clicked}\n  >\n    {props.children}\n  </button>\n);\n\nexport default button;\n","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.module.css\";\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>You've choose delicious Burger!!</h1>\r\n      <div className={classes.CheckoutSummaryDiv}>\r\n        <Burger ingredients={props.ingredients} />\r\n        <p>\r\n          <strong>Your Order Total: ${props.price}</strong>\r\n        </p>\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.clickedCancel}>\r\n        Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.clickedContinued}>\r\n        Continue\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React, { Component } from \"react\";\r\nimport CheckoutSumary from \"../../Components/Order/CheckoutSummary/CheckoutSummary\";\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    ingredients: {},\r\n    totalPrice: 0,\r\n    canPurchase: false,\r\n  };\r\n  componentDidMount() {\r\n    /* \r\n    // if data was passed in URL, it could be fetched like below\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    const ingredients = {};\r\n    for (let params in query.entries()) {\r\n      ingredients[params[0]] = +ingredients[params[1]];\r\n    }\r\n    // End of code of fetching data passed from URL\r\n     */\r\n\r\n    // fetch data passed hiddenly as below\r\n    //console.log(this.props);\r\n    if (\r\n      this.props.location.state &&\r\n      this.props.location.state.ingredients &&\r\n      this.props.location.state.price\r\n    ) {\r\n      const ingredients = this.props.location.state.ingredients;\r\n      const totalPrice = this.props.location.state.price;\r\n      this.setState({\r\n        ingredients: ingredients,\r\n        totalPrice: totalPrice,\r\n        canPurchase: true,\r\n      });\r\n    }\r\n  }\r\n  CheckoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n  CheckoutContinuedHandler = () => {\r\n    //this.props.history.replace(\"/checkout/continue\");\r\n    this.props.history.push(\"/checkout/continue\", {\r\n      ingredients: this.state.ingredients,\r\n      totalPrice: this.state.totalPrice,\r\n    });\r\n  };\r\n  render() {\r\n    let checkoutSummary = null;\r\n    if (this.state.canPurchase) {\r\n      checkoutSummary = (\r\n        <CheckoutSumary\r\n          ingredients={this.state.ingredients}\r\n          clickedCancel={this.CheckoutCancelledHandler}\r\n          clickedContinued={this.CheckoutContinuedHandler}\r\n          price={this.state.totalPrice}\r\n        />\r\n      );\r\n    } else {\r\n      checkoutSummary = (\r\n        <p style={{ textAlign: \"center\" }}>Your Cart is emplty!</p>\r\n      );\r\n    }\r\n    return <div>{checkoutSummary} </div>;\r\n  }\r\n}\r\n\r\nexport default Checkout;\r\n","import React, { Component } from \"react\";\r\n//import { Route } from \"react-router-dom\";\r\nimport Button from \"../../../Components/UI/Button/Button\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport Spinner from \"../../../Components/UI/Spinner/Spinner\";\r\nimport Modal from \"../../../Components/UI/Modal/Modal\";\r\nimport Aux from \"../../../HOC/Auxilary/Auxilary\";\r\nimport axiosOrders from \"../../../axios-orders\";\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    customer: {\r\n      cName: \"\",\r\n      cEmail: \"\",\r\n      caStreet: \"\",\r\n      zip: \"\",\r\n    },\r\n    ingredients: {},\r\n    totalPrice: 0,\r\n    deliveryMethod: \"\",\r\n    showModal: false,\r\n    showSpinner: false,\r\n    orderMessages: {\r\n      Success: \"\",\r\n    },\r\n  };\r\n  HideModalHandler = () => {\r\n    this.setState({\r\n      showModal: false,\r\n      orderMessages: { Success: \"\" },\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  OrderNowHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ showModal: true, showSpinner: true });\r\n    const orderData = {\r\n      ingredients: this.props.location.state.ingredients,\r\n      price: this.props.location.state.totalPrice,\r\n      customer: this.state.customer,\r\n      deliveryMethod: this.state.deliveryMethod,\r\n    };\r\n\r\n    axiosOrders\r\n      .post(\"/orders.json\", orderData)\r\n      .then((response) => {\r\n        if (response) {\r\n          this.setState({\r\n            showSpinner: false,\r\n            orderMessages: {\r\n              Success: \"Order Placed Successfully, Thank you!\",\r\n            },\r\n          });\r\n        } else {\r\n          this.setState({\r\n            showSpinner: false,\r\n            showModal: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          showSpinner: false,\r\n          showModal: false,\r\n        });\r\n      });\r\n    return false;\r\n  };\r\n\r\n  handleChange(event) {\r\n    const updatedCustomerData = {\r\n      ...this.state.customer,\r\n    };\r\n    updatedCustomerData[event.target.name] = event.target.value;\r\n    this.setState({\r\n      customer: updatedCustomerData,\r\n    });\r\n  }\r\n  render() {\r\n    let spinnerData = null;\r\n    if (this.state.showSpinner) {\r\n      spinnerData = <Spinner />;\r\n    } else if (this.state.orderMessages.Success !== \"\") {\r\n      spinnerData = this.state.orderMessages.Success;\r\n    }\r\n    const conactContent = (\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          name=\"cName\"\r\n          ref=\"cName\"\r\n          placeholder=\"Your Name\"\r\n          onChange={(event) => this.handleChange(event)}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"cEmail\"\r\n          ref=\"cName\"\r\n          placeholder=\"Your Email\"\r\n          onChange={(event) => this.handleChange(event)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"caStreet\"\r\n          ref=\"cName\"\r\n          placeholder=\"Your Address\"\r\n          onChange={(event) => this.handleChange(event)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"zip\"\r\n          ref=\"cName\"\r\n          placeholder=\"Postal Code\"\r\n          onChange={(event) => this.handleChange(event)}\r\n        />\r\n\r\n        <select\r\n          name=\"deliveryMethod\"\r\n          ref=\"cName\"\r\n          onChange={(event) => {\r\n            this.setState({\r\n              deliveryMethod: event.target.value,\r\n            });\r\n          }}\r\n        >\r\n          <option value=\"\">Select Shipping Method</option>\r\n          <option value=\"LocalShipping\">Local Shipping</option>\r\n          <option value=\"ups\">UPS</option>\r\n          <option value=\"fastest\">Fastest</option>\r\n        </select>\r\n        <Button btnType=\"Success\" clicked={this.OrderNowHandler}>\r\n          Order Now\r\n        </Button>\r\n      </form>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4>Provide your contact details</h4>\r\n\r\n        <Aux>\r\n          <Modal isShow={this.state.showModal} clicked={this.HideModalHandler}>\r\n            {spinnerData}\r\n          </Modal>\r\n          {conactContent}\r\n        </Aux>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactData;\r\n","import React, { Component } from \"react\";\nimport Layout from \"../src/HOC/Layout/Layout\";\nimport BurgerBuilder from \"../src/Containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./Containers/Checkout/Checkout\";\nimport ContactData from \"./Containers/Checkout/ContactData/ContactData\";\n\nimport { Route, Switch } from \"react-router-dom\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/checkout/continue\" component={ContactData} />\n            <Route path=\"/checkout\" component={Checkout} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}