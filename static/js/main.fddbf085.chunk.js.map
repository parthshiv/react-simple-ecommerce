{"version":3,"sources":["Components/Burger/BurgerIngredients/BurgerIngredients.module.css","Components/Burger/BuildControls/BuildControl/BuildControl.module.css","Components/Burger/OrderSummary/OrderSummary.module.css","Components/Burger/BuildControls/BuildControls.module.css","Components/UI/Modal/Modal.module.css","Components/Layout/Layout.module.css","Components/Burger/Burger.module.css","HOC/Auxilary.js","Components/Layout/Layout.js","Components/Burger/BurgerIngredients/BurgerIngredients.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/UI/Modal/Modal.js","Components/Burger/OrderSummary/OrderSummary.js","Containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","className","classes","Content","BurgerIngredients","ingredients","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Cheese","Bacon","Meat","Salad","Component","burger","dynamicIngredients","Object","keys","map","igKey","Array","_","i","key","reduce","oldArr","newArr","concat","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","removeIngred","disabled","isDisabled","More","addIngred","controls","BuildControls","price","toFixed","cntrKey","ingredientsAdd","ingredientsRemove","disabledParam","isPurchasable","OrderButton","showModal","modal","Modal","style","transform","isShow","opacity","closeButton","clicked","orderSummary","igkey","textTransform","clickedContinue","Button","Success","join","clickedCancel","Danger","INGREDEIENTS_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","totalPrice","addIngredientsHandler","updatedCount","oldPrice","ingredPrices","updatedInregedients","setState","checkPurchasable","removeIngredientsHandler","oldCount","finalPrice","showModalHandler","HideModalHandler","continueCheckout","alert","ingreds","SumOfIngreds","OldSum","newEl","disabledInfo","OrderSummary","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fddbf085.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__u9k9Z\",\"BreadTop\":\"BurgerIngredients_BreadTop__2lI4E\",\"Seeds1\":\"BurgerIngredients_Seeds1__1T1m6\",\"Seeds2\":\"BurgerIngredients_Seeds2__1kms5\",\"Meat\":\"BurgerIngredients_Meat__2ANxC\",\"Cheese\":\"BurgerIngredients_Cheese__1F9TC\",\"Salad\":\"BurgerIngredients_Salad__2dDeS\",\"Bacon\":\"BurgerIngredients_Bacon__1LyKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1288k\",\"Label\":\"BuildControl_Label__2526H\",\"Less\":\"BuildControl_Less__2yrt6\",\"More\":\"BuildControl_More__2s6d0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"OrderSummary_Button__3p3-5\",\"Success\":\"OrderSummary_Success__1gM17\",\"Danger\":\"OrderSummary_Danger__3uf5S\",\"enable\":\"OrderSummary_enable__nZZw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__FI1Mi\",\"OrderButton\":\"BuildControls_OrderButton__2EqVZ\",\"enable\":\"BuildControls_enable__2knuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1tCwy\",\"closeButton\":\"Modal_closeButton__sf80b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__T8ACT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__9BxtR\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React from \"react\";\r\nimport Aux from \"../../HOC/Auxilary\";\r\nimport classes from \"./Layout.module.css\";\r\n\r\nconst layout = (props) => {\r\n  return (\r\n    <Aux>\r\n      <div>header menu</div>\r\n      <main className={classes.Content}>{props.children}</main>\r\n    </Aux>\r\n  );\r\n};\r\nexport default layout;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./BurgerIngredients.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredients extends Component {\r\n  render() {\r\n    let ingredients = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredients = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n\r\n      case \"bread-top\":\r\n        ingredients = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"cheese\":\r\n        ingredients = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredients = <div className={classes.Bacon}></div>;\r\n        break;\r\n      case \"meat\":\r\n        ingredients = <div className={classes.Meat}></div>;\r\n        break;\r\n\r\n      case \"salad\":\r\n        ingredients = <div className={classes.Salad}></div>;\r\n        break;\r\n\r\n      default:\r\n        ingredients = null;\r\n        break;\r\n    }\r\n    return ingredients;\r\n  }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredients from \"./BurgerIngredients/BurgerIngredients\";\r\n\r\nconst burger = (props) => {\r\n  //console.log(props.ingredients);\r\n  const igProps = Object.keys(props.ingredients); // returns/create the keys of Array's keys\r\n  //console.log(igProps);\r\n  // loop based on main array's Keys\r\n  let dynamicIngredients = igProps\r\n    .map((igKey) => {\r\n      const newArr = [...Array(props.ingredients[igKey])];\r\n      //console.log(newArr);\r\n      // now below line will loop based on value of ingredients, i.e cheese is 2 then loop 2 times for cheese\r\n      return newArr.map((_, i) => {\r\n        return <BurgerIngredients key={igKey + i + 1} type={igKey} />;\r\n      });\r\n    })\r\n    /**** reduce is inbuilt javascript function for arrays. It automatically accepts 2 arguments. Previous value and current value. It also accept an initial value, for example an empty array [].  For more infor, please read guide about reduce.\r\n     *****/\r\n    .reduce((oldArr, newArr) => {\r\n      return oldArr.concat(newArr);\r\n    }, []);\r\n\r\n  if (dynamicIngredients.length === 0) {\r\n    dynamicIngredients = <p>Please start adding ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredients type=\"bread-top\" />\r\n      {dynamicIngredients}\r\n      <BurgerIngredients type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.module.css\";\r\n\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.Label}>{props.label} </div>\r\n      <button\r\n        className={classes.Less}\r\n        onClick={props.removeIngred}\r\n        disabled={props.isDisabled}\r\n      >\r\n        -\r\n      </button>\r\n      <button className={classes.More} onClick={props.addIngred}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport classes from \"./BuildControls.module.css\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n];\r\n\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Total Price: <b>${props.price.toFixed(2)}</b>\r\n      </p>\r\n      {controls.map((cntrKey) => {\r\n        return (\r\n          <BuildControl\r\n            label={cntrKey.label}\r\n            key={cntrKey.label}\r\n            addIngred={() => props.ingredientsAdd(cntrKey.type)}\r\n            removeIngred={() => props.ingredientsRemove(cntrKey.type)}\r\n            isDisabled={props.disabledParam[cntrKey.type]}\r\n          />\r\n        );\r\n      })}\r\n      <button\r\n        disabled={!props.isPurchasable}\r\n        className={classes.OrderButton}\r\n        onClick={props.showModal}\r\n      >\r\n        Order Now\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst modal = (props) => {\r\n  return (\r\n    <div\r\n      className={classes.Modal}\r\n      style={{\r\n        //display: props.isShow ? \"block\" : \"none\",\r\n        transform: props.isShow ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n        opacity: props.isShow ? \"1\" : \"0\",\r\n      }}\r\n    >\r\n      <button className={classes.closeButton} onClick={props.clicked}>\r\n        X\r\n      </button>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default modal;\r\n","import React from \"react\";\r\nimport Aux from \"../../../HOC/Auxilary\";\r\nimport classes from \"./OrderSummary.module.css\";\r\n\r\nconst orderSummary = (props) => {\r\n  const ingredients = Object.keys(props.ingredients).map((igkey) => {\r\n    return (\r\n      <li key={igkey}>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igkey}</span>: &nbsp;\r\n        {props.ingredients[igkey]}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Aux>\r\n      <h3>Your Order Summary </h3>\r\n      <p>A Burger with the following ingredients:</p>\r\n      <ul>{ingredients}</ul>\r\n      <p>\r\n        <strong>Your Order Total: ${props.price}</strong>\r\n      </p>\r\n      <p>Continue to checkout?</p>\r\n      <button\r\n        onClick={props.clickedContinue}\r\n        className={[classes.Button, classes.Success].join(\" \")}\r\n      >\r\n        Continue\r\n      </button>\r\n      <button\r\n        onClick={props.clickedCancel}\r\n        className={[classes.Button, classes.Danger].join(\" \")}\r\n      >\r\n        Cancel\r\n      </button>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default orderSummary;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../HOC/Auxilary\";\r\nimport Burger from \"../../Components/Burger/Burger\";\r\nimport BuildControls from \"../../Components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../Components/Burger/OrderSummary/OrderSummary\";\r\n\r\nconst INGREDEIENTS_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.4,\r\n  cheese: 0.7,\r\n  meat: 1.2,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n      bacon: 0,\r\n    },\r\n    totalPrice: 0,\r\n    isPurchasable: false,\r\n    showModal: false,\r\n  };\r\n\r\n  checkPurchasable(ingreds) {\r\n    const SumOfIngreds = Object.keys(ingreds)\r\n      .map((igKey) => {\r\n        return ingreds[igKey];\r\n      })\r\n      .reduce((OldSum, newEl) => {\r\n        return OldSum + newEl;\r\n      }, 0);\r\n\r\n    this.setState({\r\n      isPurchasable: SumOfIngreds > 0, // this will return true or false\r\n    });\r\n  }\r\n  addIngredientsHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const oldPrice = this.state.totalPrice;\r\n    const ingredPrices = INGREDEIENTS_PRICES[type];\r\n    const updatedInregedients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedInregedients[type] = updatedCount;\r\n    this.setState({\r\n      totalPrice: oldPrice + ingredPrices,\r\n      ingredients: updatedInregedients,\r\n    });\r\n    this.checkPurchasable(updatedInregedients);\r\n  };\r\n\r\n  removeIngredientsHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) return; // return if less than 0 count\r\n    const updatedCount = oldCount - 1;\r\n    const oldPrice = this.state.totalPrice;\r\n\r\n    const ingredPrices = INGREDEIENTS_PRICES[type];\r\n    const updatedInregedients = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    let finalPrice = oldPrice - ingredPrices;\r\n    if (finalPrice <= 0) finalPrice = 0;\r\n    updatedInregedients[type] = updatedCount;\r\n    this.setState({\r\n      totalPrice: finalPrice,\r\n      ingredients: updatedInregedients,\r\n    });\r\n    this.checkPurchasable(updatedInregedients);\r\n  };\r\n\r\n  showModalHandler = () => {\r\n    this.setState({\r\n      showModal: true,\r\n    });\r\n  };\r\n\r\n  HideModalHandler = () => {\r\n    this.setState({\r\n      showModal: false,\r\n    });\r\n  };\r\n\r\n  continueCheckout = () => {\r\n    alert(\"Checkout continue!\");\r\n  };\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0; // this will return boolean, true/false\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal isShow={this.state.showModal} clicked={this.HideModalHandler}>\r\n          <OrderSummary\r\n            ingredients={this.state.ingredients}\r\n            clickedCancel={this.HideModalHandler}\r\n            clickedContinue={this.continueCheckout}\r\n            price={this.state.totalPrice}\r\n          />\r\n        </Modal>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientsAdd={this.addIngredientsHandler}\r\n          ingredientsRemove={this.removeIngredientsHandler}\r\n          price={this.state.totalPrice}\r\n          disabledParam={disabledInfo}\r\n          isPurchasable={this.state.isPurchasable}\r\n          showModal={this.showModalHandler}\r\n        />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from \"react\";\nimport Layout from \"../src/Components/Layout/Layout\";\nimport BurgerBuilder from \"../src/Containers/BurgerBuilder/BurgerBuilder\";\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}