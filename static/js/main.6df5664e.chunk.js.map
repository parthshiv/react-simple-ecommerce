{"version":3,"sources":["Components/Burger/BurgerIngredients/BurgerIngredients.module.css","Components/Navigation/SideDrawer/SideDrawer.module.css","Components/Burger/BuildControls/BuildControl/BuildControl.module.css","Components/Burger/OrderSummary/OrderSummary.module.css","Components/Navigation/Toolbar/Toolbar.module.css","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","Components/Burger/BuildControls/BuildControls.module.css","Components/UI/Modal/Modal.module.css","Components/Layout/Layout.module.css","assets/images/burger-logo.png","Components/Logo/Logo.module.css","Components/Navigation/NavigationItems/NavigationItems.module.css","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","Components/UI/Backdrop/Backdrop.module.css","Components/Burger/Burger.module.css","HOC/Auxilary.js","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Components/Navigation/Toolbar/Toolbar.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/SideDrawer/SideDrawer.js","Components/Layout/Layout.js","Components/Burger/BurgerIngredients/BurgerIngredients.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/UI/Modal/Modal.js","Components/Burger/OrderSummary/OrderSummary.js","Containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","href","link","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredients","ingredients","type","BreadBottom","BreadTop","Seeds1","Seeds2","Cheese","Bacon","Meat","Salad","burger","dynamicIngredients","Object","keys","map","igKey","Array","_","i","key","reduce","oldArr","newArr","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removeIngred","disabled","isDisabled","More","addIngred","controls","BuildControls","price","toFixed","cntrKey","ingredientsAdd","ingredientsRemove","disabledParam","isPurchasable","OrderButton","showModal","modal","isShow","Modal","transform","opacity","closeButton","orderSummary","igkey","textTransform","clickedContinue","Button","Success","clickedCancel","Danger","INGREDEIENTS_PRICES","salad","bacon","cheese","meat","BurgerBuilder","totalPrice","addIngredientsHandler","updatedCount","oldPrice","ingredPrices","updatedInregedients","checkPurchasable","removeIngredientsHandler","oldCount","finalPrice","showModalHandler","HideModalHandler","continueCheckout","alert","ingreds","SumOfIngreds","OldSum","newEl","disabledInfo","OrderSummary","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6df5664e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__u9k9Z\",\"BreadTop\":\"BurgerIngredients_BreadTop__2lI4E\",\"Seeds1\":\"BurgerIngredients_Seeds1__1T1m6\",\"Seeds2\":\"BurgerIngredients_Seeds2__1kms5\",\"Meat\":\"BurgerIngredients_Meat__2ANxC\",\"Cheese\":\"BurgerIngredients_Cheese__1F9TC\",\"Salad\":\"BurgerIngredients_Salad__2dDeS\",\"Bacon\":\"BurgerIngredients_Bacon__1LyKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3I5y2\",\"Open\":\"SideDrawer_Open__2xBaD\",\"Close\":\"SideDrawer_Close__3L83H\",\"Logo\":\"SideDrawer_Logo__1Z7ii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1288k\",\"Label\":\"BuildControl_Label__2526H\",\"Less\":\"BuildControl_Less__2yrt6\",\"More\":\"BuildControl_More__2s6d0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"OrderSummary_Button__3p3-5\",\"Success\":\"OrderSummary_Success__1gM17\",\"Danger\":\"OrderSummary_Danger__3uf5S\",\"enable\":\"OrderSummary_enable__nZZw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2D8IW\",\"Logo\":\"Toolbar_Logo__3PH56\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2dQWa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__5d3Zn\",\"active\":\"NavigationItem_active__cBpCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__FI1Mi\",\"OrderButton\":\"BuildControls_OrderButton__2EqVZ\",\"enable\":\"BuildControls_enable__2knuQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1tCwy\",\"closeButton\":\"Modal_closeButton__sf80b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__T8ACT\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1vh4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__360it\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1q_vo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2iq_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__9BxtR\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React from \"react\";\n\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\nimport classes from \"./Logo.module.css\";\n\nconst logo = (props) => (\n  <div className={classes.Logo} style={{ height: props.height }}>\n    <img src={burgerLogo} alt=\"MyBurger\" />\n  </div>\n);\n\nexport default logo;\n","import React from \"react\";\n\nimport classes from \"./NavigationItem.module.css\";\n\nconst navigationItem = (props) => (\n  <li className={classes.NavigationItem}>\n    <a href={props.link} className={props.active ? classes.active : null}>\n      {props.children}\n    </a>\n  </li>\n);\n\nexport default navigationItem;\n","import React from \"react\";\n\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst navigationItems = () => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/\" active>\n      Burger Builder\n    </NavigationItem>\n    <NavigationItem link=\"/\">Checkout</NavigationItem>\n  </ul>\n);\n\nexport default navigationItems;\n","import React from \"react\";\n\nimport classes from \"./DrawerToggle.module.css\";\n\nconst drawerToggle = (props) => (\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default drawerToggle;\n","import React from \"react\";\n\nimport classes from \"./Toolbar.module.css\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\nconst toolbar = (props) => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked} />\n    <div className={classes.Logo}>\n      <Logo />\n    </div>\n    <nav className={classes.DesktopOnly}>\n      <NavigationItems />\n    </nav>\n  </header>\n);\n\nexport default toolbar;\n","import React from \"react\";\n\nimport classes from \"./Backdrop.module.css\";\n\nconst backdrop = (props) =>\n  props.show ? (\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\n  ) : null;\n\nexport default backdrop;\n","import React from \"react\";\n\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SideDrawer.module.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\nimport Aux from \"../../../HOC/Auxilary\";\n\nconst sideDrawer = (props) => {\n  let attachedClasses = [classes.SideDrawer, classes.Close];\n  if (props.open) {\n    attachedClasses = [classes.SideDrawer, classes.Open];\n  }\n  return (\n    <Aux>\n      <Backdrop show={props.open} clicked={props.closed} />\n      <div className={attachedClasses.join(\" \")}>\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems />\n        </nav>\n      </div>\n    </Aux>\n  );\n};\n\nexport default sideDrawer;\n","import React, { Component } from \"react\";\r\n\r\nimport Aux from \"../../HOC/Auxilary\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../Components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../Components/Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false,\r\n  };\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { showSideDrawer: !prevState.showSideDrawer };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n        <SideDrawer\r\n          open={this.state.showSideDrawer}\r\n          closed={this.sideDrawerClosedHandler}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./BurgerIngredients.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngredients extends Component {\r\n  render() {\r\n    let ingredients = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredients = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n\r\n      case \"bread-top\":\r\n        ingredients = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"cheese\":\r\n        ingredients = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredients = <div className={classes.Bacon}></div>;\r\n        break;\r\n      case \"meat\":\r\n        ingredients = <div className={classes.Meat}></div>;\r\n        break;\r\n\r\n      case \"salad\":\r\n        ingredients = <div className={classes.Salad}></div>;\r\n        break;\r\n\r\n      default:\r\n        ingredients = null;\r\n        break;\r\n    }\r\n    return ingredients;\r\n  }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredients from \"./BurgerIngredients/BurgerIngredients\";\r\n\r\nconst burger = (props) => {\r\n  //console.log(props.ingredients);\r\n  const igProps = Object.keys(props.ingredients); // returns/create the keys of Array's keys\r\n  //console.log(igProps);\r\n  // loop based on main array's Keys\r\n  let dynamicIngredients = igProps\r\n    .map((igKey) => {\r\n      const newArr = [...Array(props.ingredients[igKey])];\r\n      //console.log(newArr);\r\n      // now below line will loop based on value of ingredients, i.e cheese is 2 then loop 2 times for cheese\r\n      return newArr.map((_, i) => {\r\n        return <BurgerIngredients key={igKey + i + 1} type={igKey} />;\r\n      });\r\n    })\r\n    /**** reduce is inbuilt javascript function for arrays. It automatically accepts 2 arguments. Previous value and current value. It also accept an initial value, for example an empty array [].  For more infor, please read guide about reduce.\r\n     *****/\r\n    .reduce((oldArr, newArr) => {\r\n      return oldArr.concat(newArr);\r\n    }, []);\r\n\r\n  if (dynamicIngredients.length === 0) {\r\n    dynamicIngredients = <p>Please start adding ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredients type=\"bread-top\" />\r\n      {dynamicIngredients}\r\n      <BurgerIngredients type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.module.css\";\r\n\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.Label}>{props.label} </div>\r\n      <button\r\n        className={classes.Less}\r\n        onClick={props.removeIngred}\r\n        disabled={props.isDisabled}\r\n      >\r\n        -\r\n      </button>\r\n      <button className={classes.More} onClick={props.addIngred}>\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport classes from \"./BuildControls.module.css\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n];\r\n\r\nconst buildControl = (props) => {\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Total Price: <b>${props.price.toFixed(2)}</b>\r\n      </p>\r\n      {controls.map((cntrKey) => {\r\n        return (\r\n          <BuildControl\r\n            label={cntrKey.label}\r\n            key={cntrKey.label}\r\n            addIngred={() => props.ingredientsAdd(cntrKey.type)}\r\n            removeIngred={() => props.ingredientsRemove(cntrKey.type)}\r\n            isDisabled={props.disabledParam[cntrKey.type]}\r\n          />\r\n        );\r\n      })}\r\n      <button\r\n        disabled={!props.isPurchasable}\r\n        className={classes.OrderButton}\r\n        onClick={props.showModal}\r\n      >\r\n        Order Now\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Aux from \"../../../HOC/Auxilary\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nconst modal = (props) => {\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.isShow} clicked={props.clicked} />\r\n      <div\r\n        className={classes.Modal}\r\n        style={{\r\n          transform: props.isShow ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n          opacity: props.isShow ? \"1\" : \"0\",\r\n        }}\r\n      >\r\n        <button className={classes.closeButton} onClick={props.clicked}>\r\n          X\r\n        </button>\r\n        {props.children}\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default modal;\r\n","import React from \"react\";\r\nimport Aux from \"../../../HOC/Auxilary\";\r\nimport classes from \"./OrderSummary.module.css\";\r\n\r\nconst orderSummary = (props) => {\r\n  const ingredients = Object.keys(props.ingredients).map((igkey) => {\r\n    return (\r\n      <li key={igkey}>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igkey}</span>: &nbsp;\r\n        {props.ingredients[igkey]}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Aux>\r\n      <h3>Your Order Summary </h3>\r\n      <p>A Burger with the following ingredients:</p>\r\n      <ul>{ingredients}</ul>\r\n      <p>\r\n        <strong>Your Order Total: ${props.price}</strong>\r\n      </p>\r\n      <p>Continue to checkout?</p>\r\n      <button\r\n        onClick={props.clickedContinue}\r\n        className={[classes.Button, classes.Success].join(\" \")}\r\n      >\r\n        Continue\r\n      </button>\r\n      <button\r\n        onClick={props.clickedCancel}\r\n        className={[classes.Button, classes.Danger].join(\" \")}\r\n      >\r\n        Cancel\r\n      </button>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default orderSummary;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../HOC/Auxilary\";\r\nimport Burger from \"../../Components/Burger/Burger\";\r\nimport BuildControls from \"../../Components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../Components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../Components/Burger/OrderSummary/OrderSummary\";\r\n\r\nconst INGREDEIENTS_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.4,\r\n  cheese: 0.7,\r\n  meat: 1.2,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      cheese: 0,\r\n      meat: 0,\r\n      bacon: 0,\r\n    },\r\n    totalPrice: 0,\r\n    isPurchasable: false,\r\n    showModal: false,\r\n  };\r\n\r\n  checkPurchasable(ingreds) {\r\n    const SumOfIngreds = Object.keys(ingreds)\r\n      .map((igKey) => {\r\n        return ingreds[igKey];\r\n      })\r\n      .reduce((OldSum, newEl) => {\r\n        return OldSum + newEl;\r\n      }, 0);\r\n\r\n    this.setState({\r\n      isPurchasable: SumOfIngreds > 0, // this will return true or false\r\n    });\r\n  }\r\n  addIngredientsHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const oldPrice = this.state.totalPrice;\r\n    const ingredPrices = INGREDEIENTS_PRICES[type];\r\n    const updatedInregedients = {\r\n      ...this.state.ingredients,\r\n    };\r\n    updatedInregedients[type] = updatedCount;\r\n    this.setState({\r\n      totalPrice: oldPrice + ingredPrices,\r\n      ingredients: updatedInregedients,\r\n    });\r\n    this.checkPurchasable(updatedInregedients);\r\n  };\r\n\r\n  removeIngredientsHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) return; // return if less than 0 count\r\n    const updatedCount = oldCount - 1;\r\n    const oldPrice = this.state.totalPrice;\r\n\r\n    const ingredPrices = INGREDEIENTS_PRICES[type];\r\n    const updatedInregedients = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    let finalPrice = oldPrice - ingredPrices;\r\n    if (finalPrice <= 0) finalPrice = 0;\r\n    updatedInregedients[type] = updatedCount;\r\n    this.setState({\r\n      totalPrice: finalPrice,\r\n      ingredients: updatedInregedients,\r\n    });\r\n    this.checkPurchasable(updatedInregedients);\r\n  };\r\n\r\n  showModalHandler = () => {\r\n    this.setState({\r\n      showModal: true,\r\n    });\r\n  };\r\n\r\n  HideModalHandler = () => {\r\n    this.setState({\r\n      showModal: false,\r\n    });\r\n  };\r\n\r\n  continueCheckout = () => {\r\n    alert(\"Checkout continue!\");\r\n  };\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.state.ingredients,\r\n    };\r\n\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0; // this will return boolean, true/false\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal isShow={this.state.showModal} clicked={this.HideModalHandler}>\r\n          <OrderSummary\r\n            ingredients={this.state.ingredients}\r\n            clickedCancel={this.HideModalHandler}\r\n            clickedContinue={this.continueCheckout}\r\n            price={this.state.totalPrice}\r\n          />\r\n        </Modal>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientsAdd={this.addIngredientsHandler}\r\n          ingredientsRemove={this.removeIngredientsHandler}\r\n          price={this.state.totalPrice}\r\n          disabledParam={disabledInfo}\r\n          isPurchasable={this.state.isPurchasable}\r\n          showModal={this.showModalHandler}\r\n        />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React from \"react\";\nimport Layout from \"../src/Components/Layout/Layout\";\nimport BurgerBuilder from \"../src/Containers/BurgerBuilder/BurgerBuilder\";\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}